{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "0bca5b44-5e5d-407b-9493-03bfa9b1c140",
            "cellValue": "CurrentTab",
            "linkTarget": "parameter",
            "linkLabel": "Compliance view",
            "subTarget": "ComplianceStatus",
            "style": "link"
          },
          {
            "id": "5677a148-13ab-4431-934a-634970e06bac",
            "cellValue": "CurrentTab",
            "linkTarget": "parameter",
            "linkLabel": "Recommendations",
            "subTarget": "Recommendations",
            "style": "link"
          },
          {
            "id": "ab83bcdd-1159-4c5f-8f0b-4a8f3871ddb1",
            "cellValue": "CurrentTab",
            "linkTarget": "parameter",
            "linkLabel": "Pending updates",
            "subTarget": "PendingUpdates",
            "style": "link"
          },
          {
            "id": "278d26b9-b7f5-43c7-8754-980402d36551",
            "cellValue": "CurrentTab",
            "linkTarget": "parameter",
            "linkLabel": "Update installation history (last 30 days)",
            "subTarget": "UpdateInstallationHistory",
            "style": "link"
          },
          {
            "id": "8db01cec-43a2-4229-8e01-24929d0c5865",
            "cellValue": "CurrentTab",
            "linkTarget": "parameter",
            "linkLabel": "Schedules",
            "subTarget": "Schedule",
            "style": "link"
          },
          {
            "id": "a6ca8edd-c70e-4925-bdc2-71563df27a92",
            "cellValue": "CurrentTab",
            "linkTarget": "parameter",
            "linkLabel": "Operations history",
            "subTarget": "OperationsHistory",
            "style": "link"
          }
        ]
      },
      "name": "links - 0"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "095e1fe3-574e-43e3-a993-d3df4d956294",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscription",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": true,
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                }
              ],
              "exportParameters": true
            },
            "name": "Summary filters"
          },
          {
            "type": 1,
            "content": {
              "json": "# Machines distribution by OS and Resource type"
            },
            "name": "text - 10"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources \r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| extend osType = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n| summarize\r\ntotal = count(),\r\nazureWindows = countif(type =~ \"microsoft.compute/virtualmachines\" and osType =~ \"Windows\"),\r\nazureLinux = countif(type =~ \"microsoft.compute/virtualmachines\" and osType =~ \"Linux\"),\r\narcWindows = countif(type =~ \"microsoft.hybridcompute/machines\" and osType =~ \"Windows\"),\r\narcLinux = countif(type =~ \"microsoft.hybridcompute/machines\" and osType =~ \"Linux\")\r\n| project machinePack = pack(\"Total\", total, \"Azure virtual machines - Linux\", azureLinux, \"Arc-enabled servers - Linux\", arcLinux, \"Azure virtual machines - Windows\", azureWindows, \"Arc-enabled servers - Windows\", arcWindows)\r\n| mv-expand machinePack\r\n| extend machine = tostring(bag_keys(machinePack)[0])\r\n| extend tileRank = case(machine == \"Total\", 0, machine == \"Azure virtual machines - Windows\", 1, machine == \"Azure virtual machines - Linux\", 2, machine == \"Arc-enabled servers - Windows\", 4, machine == \"Arc-enabled servers - Linux\", 5, 6)\r\n| extend count_ = tolong(machinePack[machine])\r\n| project machine, tileRank, count_ ",
              "size": 4,
              "noDataMessage": "No Machines found.",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "machine",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto",
                    "linkTarget": "OpenBlade",
                    "bladeOpenContext": {
                      "bladeName": "UpdateCenterMachinesBlade",
                      "extensionName": "Microsoft_Azure_Automation",
                      "bladeJsonParameters": "{}"
                    }
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": false,
                "sortCriteriaField": "tileRank",
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "name": "Total machines view",
            "styleSettings": {
              "padding": "-30px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Security and Critical update compliance status"
            },
            "name": "text - SecurityAndCriticalUpdateComplianceStatus"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\" or type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isempty(properties), \"No updates data\", toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                    "size": 3,
                    "title": "Compliance status of machines",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Compliant",
                          "color": "green"
                        },
                        {
                          "seriesName": "Non-Compliant",
                          "color": "red"
                        },
                        {
                          "seriesName": "No updates data",
                          "color": "orangeDark"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Security and critical update compliance",
                  "styleSettings": {
                    "maxWidth": "35%"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isempty(properties), \"No updates data\", toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Azure virtual machines compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "unit",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              }
                            ]
                          }
                        },
                        "name": "Security and Critical update compliance by resource type - Azure"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isempty(properties), \"No updates data\", toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Arc-enabled servers compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "unit",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "name": "Security and Critical update compliance by resource type - Arc"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "Compliance percentages",
                  "styleSettings": {
                    "maxWidth": "30%"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| extend osType = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n| where osType =~ \"windows\"\r\n| project vmId = tolower(id)\r\n| join kind=leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\" or type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n    | project vmId, properties\r\n) on vmId\r\n| extend ComplianceStatus = case(isempty(properties), \"No updates data\", toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Windows machines compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "osType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              }
                            ]
                          }
                        },
                        "name": "Security and Critical update compliance by OS type - Windows"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| extend osType = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n| where osType =~ \"linux\"\r\n| project vmId = tolower(id)\r\n| join kind=leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\" or type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n    | project vmId, properties\r\n) on vmId\r\n| extend ComplianceStatus = case(isempty(properties), \"No updates data\", toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Linux machines compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "osType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "name": "Security and Critical update compliance by OS type - Linux"
                      }
                    ]
                  },
                  "name": "Compliance by OS type",
                  "styleSettings": {
                    "maxWidth": "33.33%"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "### <u>**Action(s):**</u>"
                        },
                        "name": "text - 5"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "d083f872-c4a4-4653-a153-9e476b7bb099",
                              "linkTarget": "OpenBlade",
                              "linkLabel": "Schedule update",
                              "preText": "",
                              "postText": "or",
                              "style": "link",
                              "bladeOpenContext": {
                                "bladeName": "CreateMaintenanceConfiguration.ReactView",
                                "extensionName": "Microsoft_Azure_Maintenance",
                                "bladeParameters": [
                                  {
                                    "name": "scope",
                                    "source": "static",
                                    "value": "InGuestPatch"
                                  }
                                ]
                              }
                            },
                            {
                              "id": "6f7cb705-7a0f-487a-96c4-4ba416f25b99",
                              "linkTarget": "OpenBlade",
                              "linkLabel": "One-time update",
                              "preText": "trigger ",
                              "postText": "to stay compliant.",
                              "style": "link",
                              "bladeOpenContext": {
                                "bladeName": "UpdateCenterInstallUpdatesBlade",
                                "extensionName": "Microsoft_Azure_Automation",
                                "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"subs\": [],\r\n\t\"source\": \"AUMReportsComplianceViewTab_SecurityAndCritical\"\r\n}"
                              }
                            }
                          ]
                        },
                        "name": "links - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| extend os = tolower(coalesce(properties.osName, properties.osType, properties.storageProfile.osDisk.osType))\r\n| extend patchSettingsObject = iff(os == \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend assessmentMode = tostring(patchSettingsObject.assessmentMode)\r\n| extend PeriodicAssessment = iff(assessmentMode =~ \"AutomaticByPlatform\", \"Enabled\", \"Disabled\")\r\n| summarize PeriodicAssessmentEnablementPercentage = round(todouble(countif(PeriodicAssessment == \"Disabled\")) / count() * 100, 2)\r\n| project paRecommendation = strcat(\"**\", PeriodicAssessmentEnablementPercentage, \"% of machines do not have periodic assessment enabled.**\", \" Enable periodic assessment to stay up to date with the patch compliance of your VMs. [Learn more](https://learn.microsoft.com/azure/update-manager/assessment-options#periodic-assessment)\")",
                          "size": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "card",
                          "textSettings": {
                            "style": "markdown"
                          }
                        },
                        "name": "query - 4"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "485cae23-63ce-4120-8d04-b40d15433d1a",
                              "linkTarget": "OpenBlade",
                              "linkLabel": "Enable Periodic assessment now",
                              "style": "primary",
                              "bladeOpenContext": {
                                "bladeName": "UpdateCenterUpdateSettingsBlade",
                                "extensionName": "Microsoft_Azure_Automation",
                                "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                              }
                            }
                          ]
                        },
                        "name": "links - 1"
                      }
                    ]
                  },
                  "name": "Compliance status action"
                }
              ]
            },
            "name": "Compliance status",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Overall update compliance status"
            },
            "name": "text - OverallUpdateComplianceStatus"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id)\r\n| join kind=leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\" or type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n    | project vmId, properties\r\n) on vmId\r\n| extend ComplianceStatus = case(isnull(properties), \"No updates data\" ,toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.updateRollup) > 0 or toint(properties.availablePatchCountByClassification.featurePack) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.servicePack) > 0 or toint(properties.availablePatchCountByClassification.definition) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.tools) > 0 or toint(properties.availablePatchCountByClassification.updates) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.other) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                    "size": 3,
                    "title": "Compliance status of machines",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Compliant",
                          "color": "green"
                        },
                        {
                          "seriesName": "Non-Compliant",
                          "color": "red"
                        },
                        {
                          "seriesName": "No updates data",
                          "color": "orangeDark"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Overall update compliance",
                  "styleSettings": {
                    "maxWidth": "35%"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isnull(properties), \"No updates data\" ,toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.updateRollup) > 0 or toint(properties.availablePatchCountByClassification.featurePack) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.servicePack) > 0 or toint(properties.availablePatchCountByClassification.definition) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.tools) > 0 or toint(properties.availablePatchCountByClassification.updates) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.other) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Azure virtual machines compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "unit",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "name": "Overall update compliance by resource type - Azure"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isnull(properties), \"No updates data\" ,toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.updateRollup) > 0 or toint(properties.availablePatchCountByClassification.featurePack) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.servicePack) > 0 or toint(properties.availablePatchCountByClassification.definition) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.tools) > 0 or toint(properties.availablePatchCountByClassification.updates) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.other) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Arc-enabled servers compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "unit",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "name": "Overall update compliance by resource type - Arc"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "Overall Compliance percentages by resource types",
                  "styleSettings": {
                    "maxWidth": "30%"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| extend osType = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n| where osType =~ \"windows\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\" or type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isnull(properties), \"No updates data\" ,toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.updateRollup) > 0 or toint(properties.availablePatchCountByClassification.featurePack) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.servicePack) > 0 or toint(properties.availablePatchCountByClassification.definition) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.tools) > 0 or toint(properties.availablePatchCountByClassification.updates) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.other) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Windows machines compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "unit",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "name": "Overall update compliance by OS type - Windows"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| extend osType = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n| where osType =~ \"linux\"\r\n| project vmId = tolower(id)\r\n| join kind = leftouter (\r\n    patchassessmentresources\r\n    | where type == \"microsoft.compute/virtualmachines/patchassessmentresults\" or type == \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n    | extend status = tostring(properties.status)\r\n    | where status =~ \"Succeeded\"\r\n    | parse id with resourceId '/patchAssessmentResults/' *\r\n    | extend vmId = tolower(resourceId)\r\n) on vmId\r\n| extend ComplianceStatus = case(isnull(properties), \"No updates data\" ,toint(properties.availablePatchCountByClassification.security) > 0 or toint(properties.availablePatchCountByClassification.critical) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.updateRollup) > 0 or toint(properties.availablePatchCountByClassification.featurePack) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.servicePack) > 0 or toint(properties.availablePatchCountByClassification.definition) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.tools) > 0 or toint(properties.availablePatchCountByClassification.updates) > 0\r\n                                    or toint(properties.availablePatchCountByClassification.other) > 0, \"Non-Compliant\", \"Compliant\")\r\n| summarize dcount(vmId) by ComplianceStatus",
                          "size": 4,
                          "title": "Linux machines compliance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "unit",
                              "formatter": 1
                            },
                            "secondaryContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "resourceType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "compliancePercentage",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "bottomContent": {
                              "columnMatch": "totalMachinesString"
                            },
                            "nodeIdField": "resourceType",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                              "nodeColorField": "compliancePercentage",
                              "type": 1,
                              "colorPalette": "default",
                              "emptyValueColor": "gray"
                            },
                            "hivesMargin": 20,
                            "edgeColorSettings": null
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "No updates data",
                                "color": "orangeDark"
                              },
                              {
                                "seriesName": "Non-Compliant",
                                "color": "red"
                              },
                              {
                                "seriesName": "Compliant",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "name": "Overall update compliance by OS type - Linux"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "Overall Compliance percentages by OS type",
                  "styleSettings": {
                    "maxWidth": "30%"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "### <u>**Action(s):**</u>"
                        },
                        "name": "text - 5"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "d083f872-c4a4-4653-a153-9e476b7bb099",
                              "linkTarget": "OpenBlade",
                              "linkLabel": "Schedule update",
                              "preText": "",
                              "postText": "or",
                              "style": "link",
                              "bladeOpenContext": {
                                "bladeName": "CreateMaintenanceConfiguration.ReactView",
                                "extensionName": "Microsoft_Azure_Maintenance",
                                "bladeParameters": [
                                  {
                                    "name": "scope",
                                    "source": "static",
                                    "value": "InGuestPatch"
                                  }
                                ]
                              }
                            },
                            {
                              "id": "6f7cb705-7a0f-487a-96c4-4ba416f25b99",
                              "linkTarget": "OpenBlade",
                              "linkLabel": "One-time update",
                              "preText": "trigger ",
                              "postText": "to stay compliant.",
                              "style": "link",
                              "bladeOpenContext": {
                                "bladeName": "UpdateCenterInstallUpdatesBlade",
                                "extensionName": "Microsoft_Azure_Automation",
                                "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"subs\": [],\r\n\t\"source\": \"AUMReportsComplianceViewTab_Overall\"\r\n}"
                              }
                            }
                          ]
                        },
                        "name": "links - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| extend os = tolower(coalesce(properties.osName, properties.osType, properties.storageProfile.osDisk.osType))\r\n| extend patchSettingsObject = iff(os == \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend assessmentMode = tostring(patchSettingsObject.assessmentMode)\r\n| extend PeriodicAssessment = iff(assessmentMode =~ \"AutomaticByPlatform\", \"Enabled\", \"Disabled\")\r\n| summarize PeriodicAssessmentEnablementPercentage = round(todouble(countif(PeriodicAssessment == \"Disabled\")) / count() * 100, 2)\r\n| project paRecommendation = strcat(\"**\", PeriodicAssessmentEnablementPercentage, \"% of machines do not have periodic assessment enabled.**\", \" Enable periodic assessment to stay up to date with the patch compliance of your VMs. [Learn more](https://learn.microsoft.com/azure/update-manager/assessment-options#periodic-assessment)\")",
                          "size": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "card",
                          "textSettings": {
                            "style": "markdown"
                          }
                        },
                        "name": "query - 4"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "485cae23-63ce-4120-8d04-b40d15433d1a",
                              "linkTarget": "OpenBlade",
                              "linkLabel": "Enable Periodic assessment now",
                              "style": "primary",
                              "bladeOpenContext": {
                                "bladeName": "UpdateCenterUpdateSettingsBlade",
                                "extensionName": "Microsoft_Azure_Automation",
                                "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                              }
                            }
                          ]
                        },
                        "name": "links - 1"
                      }
                    ]
                  },
                  "name": "Compliance status action"
                }
              ]
            },
            "name": "Overall Compliance status",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "CurrentTab",
        "comparison": "isEqualTo",
        "value": "ComplianceStatus"
      },
      "name": "ComplianceStatus"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "parameters": [
                      {
                        "id": "9a4b1a88-08ad-47cf-95c2-633550e29fe9",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscription",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": true,
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "916ac12b-7ab9-497b-bbd2-59dc48fe409b",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceType",
                        "type": 7,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "jsonData": " [\r\n     { \"value\": \"microsoft.compute/virtualmachines\", \"label\": \"Azure Virtual Machine\", \"selected\":true}, \r\n     \r\n     { \"value\": \"microsoft.hybridcompute/machines\", \"label\": \"Arc enabled server\", \"selected\":true }]",
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "value": [
                          "value::all"
                        ],
                        "label": "Resource type"
                      },
                      {
                        "id": "24a4226f-32e8-4dfe-ba39-3356fc3ab9b7",
                        "version": "KqlParameterItem/1.0",
                        "name": "Location",
                        "type": 8,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\")\r\n| distinct location",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 1"
                }
              ],
              "exportParameters": true
            },
            "name": "Pending updates filters"
          },
          {
            "type": 1,
            "content": {
              "json": "Enable periodic assessment to stay up to date with the patch compliance of your VMs. [Learn more](https://learn.microsoft.com/azure/update-manager/assessment-options#periodic-assessment)",
              "style": "upsell"
            },
            "name": "text - 4"
          },
          {
            "type": 1,
            "content": {
              "json": "# Windows"
            },
            "name": "text - 2",
            "styleSettings": {
              "margin": "20px 0 0 0"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind=leftouter(\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Windows\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| where isnotempty(classification) and isnotempty(osType)\r\n| summarize dcount(uniquePatchNameWithVersion) by classification",
                    "size": 0,
                    "title": "Number of unique pending updates by classification",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "group": "classification",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "Critical",
                          "color": "red"
                        },
                        {
                          "seriesName": "Definition",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Updates",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "UpdateRollup",
                          "color": "yellowDark"
                        },
                        {
                          "seriesName": "FeaturePack",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "ServicePack",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "Tools",
                          "color": "magenta"
                        }
                      ]
                    }
                  },
                  "name": "Number of unique pending updates",
                  "styleSettings": {
                    "maxWidth": "33.33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| where classification =~ \"Security\"\r\n| extend msrcSeverity = iff(isnotnull(properties.msrcSeverity), properties.msrcSeverity, \"N/A\")\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind = leftouter (\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Windows\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(osType)\r\n| summarize dcount(uniquePatchNameWithVersion) by msrcSeverity",
                    "size": 3,
                    "title": "Number of unique pending security updates by MSRC severity",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Critical",
                          "color": "redDark"
                        },
                        {
                          "seriesName": "Important",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "Moderate",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "Low",
                          "color": "orange"
                        }
                      ]
                    }
                  },
                  "name": "MSRCSeverity",
                  "styleSettings": {
                    "maxWidth": "33.33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend publishedDateTime = todatetime(iff(isnotnull(properties.publishedDateTime), properties.publishedDateTime, \"\"))\r\n| extend publishedDateCategory = case(publishedDateTime >= ago(7d), \"0-7 day(s) ago\", publishedDateTime < ago(7d) and publishedDateTime >= ago(14d), \"7-14 days ago\", publishedDateTime < ago(14d) and publishedDateTime >= ago(30d), \"14-30 days ago\", publishedDateTime < ago(30d) and publishedDateTime >= ago(60d), \"30-60 days ago\", publishedDateTime < ago(60d) and publishedDateTime >= ago(90d), \"60-90 days ago\", publishedDateTime < ago(90d), \"More than 90 days ago\", \"Others\")\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind=leftouter (\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = case(os =~ \"Windows\", \"Windows\", os =~ \"linux\", \"Linux\", os)\r\n    | where osType == \"Windows\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(osType)\r\n| summarize dcount(uniquePatchNameWithVersion) by publishedDateCategory",
                    "size": 0,
                    "title": "Unique pending updates by published date",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "categoricalbar",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "publishedDateCategory",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "dcount_uniquePatchNameWithVersion",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "publishedDateCategory",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "dcount_uniquePatchNameWithVersion",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "Unique pending updates by published date",
                  "styleSettings": {
                    "maxWidth": "33.33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind=leftouter (\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Windows\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| where isnotempty(classification) and isnotempty(osType)\r\n| summarize dcount(vmId) by classification",
                    "size": 0,
                    "title": "Number of machines by classification of pending updates",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "Critical",
                          "color": "red"
                        },
                        {
                          "seriesName": "UpdateRollup",
                          "color": "yellowDark"
                        },
                        {
                          "seriesName": "Updates",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "Definition",
                          "color": "blue"
                        },
                        {
                          "seriesName": "FeaturePack",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "ServicePack",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "Tools",
                          "color": "magenta"
                        }
                      ]
                    }
                  },
                  "name": "Number of machines by classifcation of pending updates",
                  "styleSettings": {
                    "maxWidth": "33.33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| extend msrcSeverity = iff(isnotnull(properties.msrcSeverity), properties.msrcSeverity, \"N/A\")\r\n| extend patchName = tostring(properties.patchName)\r\n| join kind=leftouter (\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Windows\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(classification) and isnotempty(osType)\r\n| summarize NumberOfVMs = dcount(vmId) by patchName, classification, msrcSeverity\r\n| extend classificationPriority = iff(classification in~ (\"security\", \"critical\"), 0, 1)\r\n| extend msrcSeverityPriority = case(msrcSeverity =~ \"Critical\", 0, msrcSeverity =~ \"Important\", 1, msrcSeverity =~ \"Moderate\", 2, msrcSeverity =~ \"Low\", 3, 4)\r\n| sort by msrcSeverityPriority asc, classificationPriority asc, NumberOfVMs desc\r\n| project PatchName = patchName, Classification = classification, MSRCSeverity = msrcSeverity, NumberOfVMs\r\n| take 30",
                    "size": 0,
                    "title": "Top 30 pending updates",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "PatchName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "64%"
                          }
                        },
                        {
                          "columnMatch": "Classification",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Security",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "12%"
                          }
                        },
                        {
                          "columnMatch": "MSRCSeverity",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12%"
                          }
                        },
                        {
                          "columnMatch": "NumberOfVMs",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "12%"
                          }
                        },
                        {
                          "columnMatch": "uniquePatchNameWithVersion",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "70%"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "PatchName",
                          "label": "Patch name"
                        },
                        {
                          "columnId": "MSRCSeverity",
                          "label": "MSRC severity"
                        },
                        {
                          "columnId": "NumberOfVMs",
                          "label": "Number of machines"
                        }
                      ]
                    }
                  },
                  "name": "Windows top pending updates",
                  "styleSettings": {
                    "maxWidth": "66.66%"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### <u>**Action(s):**</u>"
                  },
                  "name": "text - 5",
                  "styleSettings": {
                    "margin": "50px 0 0 0"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "3c22463a-ad15-4451-9302-bed7ca4085b6",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Pending updates",
                        "preText": "Visit",
                        "postText": "view for more details and install pending Windows updates",
                        "style": "link",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterUpdatesBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeJsonParameters": "{\r\n\t\"os\": [\"Windows\"]\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "links - 3"
                }
              ]
            },
            "name": "Windows pending updates",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Linux"
            },
            "name": "text - 3"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind = leftouter (\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Linux\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| where isnotempty(classification) and isnotempty(osType)\r\n| summarize dcount(uniquePatchNameWithVersion) by classification",
                    "size": 0,
                    "title": "Number of unique pending updates by classification",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security-ESM",
                          "color": "red"
                        },
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "Other",
                          "color": "grayBlue"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Number of unique pending updates",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind = leftouter(\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Linux\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| where isnotempty(classification) and isnotempty(osType)\r\n| summarize dcount(vmId) by classification",
                    "size": 0,
                    "title": "Number of machines by classification of pending updates",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security-ESM",
                          "color": "red"
                        },
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "Other",
                          "color": "grayBlue"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Number of machines by classification of pending updates",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarePatches\")\r\n| parse type with typeID \"/patchassessmentresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend patchName = tostring(properties.patchName)\r\n| extend version = tostring(properties.version)\r\n| join kind = leftouter (\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | extend osType = iff(os =~ \"Windows\", \"Windows\", \"Linux\")\r\n    | where osType == \"Linux\"\r\n    | project vmId, osType\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(classification) and isnotempty(osType)\r\n| summarize NumberOfVMs = dcount(vmId) by patchName, version, classification\r\n| extend classificationPriority = iff(classification contains \"security\", 0, 1)\r\n| sort by classificationPriority asc, NumberOfVMs desc\r\n| project PatchName = patchName, Version = version, Classification = classification, NumberOfVMs\r\n| take 30",
                    "size": 0,
                    "title": "Top 30 pending updates",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "PatchName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30%"
                          }
                        },
                        {
                          "columnMatch": "Version",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30%"
                          }
                        },
                        {
                          "columnMatch": "Classification",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Security",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "20%"
                          }
                        },
                        {
                          "columnMatch": "NumberOfVMs",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "20%"
                          }
                        },
                        {
                          "columnMatch": "patchName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "40%"
                          }
                        },
                        {
                          "columnMatch": "version",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "40%"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "PatchName",
                          "label": "Patch name"
                        },
                        {
                          "columnId": "NumberOfVMs",
                          "label": "Number of machines"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Top 30 Linux pending updates",
                  "styleSettings": {
                    "maxWidth": "50%"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### <u>**Action(s):**</u>"
                  },
                  "name": "text - 4",
                  "styleSettings": {
                    "margin": "50px 0 0 0"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "cb03e483-2df2-4d5d-86ef-d5a7e63c8075",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Pending updates",
                        "preText": "Visit",
                        "postText": "view for more details and install pending Linux updates",
                        "style": "link",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterUpdatesBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeJsonParameters": "{\r\n\t\"os\": [\"Windows\"]\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "links - 2"
                }
              ]
            },
            "name": "Linux",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "CurrentTab",
        "comparison": "isEqualTo",
        "value": "PendingUpdates"
      },
      "name": "PendingUpdates",
      "styleSettings": {
        "margin": "0 0 0 10px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "parameters": [
                      {
                        "id": "9a4b1a88-08ad-47cf-95c2-633550e29fe9",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscription",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": true,
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "916ac12b-7ab9-497b-bbd2-59dc48fe409b",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceType",
                        "label": "Resource type",
                        "type": 7,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "jsonData": " [\r\n     { \"value\": \"microsoft.compute/virtualmachines\", \"label\": \"Azure Virtual Machine\", \"selected\":true}, \r\n     \r\n     { \"value\": \"microsoft.hybridcompute/machines\", \"label\": \"Arc enabled server\", \"selected\":true }]",
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "24a4226f-32e8-4dfe-ba39-3356fc3ab9b7",
                        "version": "KqlParameterItem/1.0",
                        "name": "Location",
                        "type": 8,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\")\r\n| distinct location",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 1"
                }
              ],
              "exportParameters": true
            },
            "name": "Update Installation history filters"
          },
          {
            "type": 1,
            "content": {
              "json": "# Windows"
            },
            "name": "text - 4",
            "styleSettings": {
              "margin": "20px 0 0 0"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnull(properties.version)\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| summarize count() by classification",
                    "size": 0,
                    "title": "Total number of updates installed by classification",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "UpdateRollup",
                          "color": "yellowDark"
                        },
                        {
                          "seriesName": "Updates",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "Definition",
                          "color": "blue"
                        },
                        {
                          "seriesName": "FeaturePack",
                          "color": "blueDarkDark"
                        },
                        {
                          "seriesName": "Critical",
                          "color": "red"
                        },
                        {
                          "seriesName": "ServicePack",
                          "color": "turquoise"
                        },
                        {
                          "seriesName": "Tools",
                          "color": "magenta"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Total number of updates installed by classification",
                  "styleSettings": {
                    "maxWidth": "33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| extend classification = tostring(properties.classifications[0])\r\n| where classification =~ \"Security\"\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnull(properties.version)\r\n| extend msrcSeverity = tostring(properties.msrcSeverity)\r\n| extend msrcSeverity = iff(isempty(msrcSeverity), \"N/A\", msrcSeverity)\r\n| summarize count() by msrcSeverity",
                    "size": 3,
                    "title": "Total number of security updates installed by MSRC severity",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Important",
                          "color": "redBright"
                        },
                        {
                          "seriesName": "Critical",
                          "color": "red"
                        },
                        {
                          "seriesName": "Moderate",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "Low",
                          "color": "orange"
                        },
                        {
                          "seriesName": "N/A",
                          "color": "turquoise"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Total number of security updates installed by MSRC severity",
                  "styleSettings": {
                    "maxWidth": "33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchInstallationResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnull(properties.version)\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| summarize dcount(vmId) by classification",
                    "size": 0,
                    "title": "Total number of machines where updates were installed",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "UpdateRollup",
                          "color": "yellowDark"
                        },
                        {
                          "seriesName": "Updates",
                          "color": "greenDarkDark"
                        },
                        {
                          "seriesName": "Definition",
                          "color": "blue"
                        },
                        {
                          "seriesName": "FeaturePack",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "Critical",
                          "color": "red"
                        },
                        {
                          "seriesName": "Tools",
                          "color": "magenta"
                        },
                        {
                          "seriesName": "ServicePack",
                          "color": "turquoise"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Total number of machines where updates were installed",
                  "styleSettings": {
                    "maxWidth": "33%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchInstallationResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnull(properties.version)\r\n| extend patchName = tostring(properties.patchName)\r\n| extend msrcSeverity = iff(isnotnull(properties.msrcSeverity), properties.msrcSeverity, \"N/A\")\r\n| summarize countOfVMs = dcount(vmId) by patchName, classification, msrcSeverity\r\n| extend classificationPriority = iff(classification in~ (\"security\", \"critical\"), 0, 1)\r\n| extend msrcSeverityPriority = case(msrcSeverity =~ \"Critical\", 0, msrcSeverity =~ \"Important\", 1, msrcSeverity =~ \"Moderate\", 2, msrcSeverity =~ \"Low\", 3, 4)\r\n| sort by msrcSeverityPriority asc, classificationPriority asc, countOfVMs desc\r\n| project PatchName = patchName, Classification = classification, MSRCSeverity = msrcSeverity, NumberOfVMs = countOfVMs\r\n| take 30",
                    "size": 0,
                    "title": "Top 30 installed updates",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "PatchName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "61%"
                          }
                        },
                        {
                          "columnMatch": "Classification",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Security",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "13%"
                          }
                        },
                        {
                          "columnMatch": "MSRCSeverity",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "13%"
                          }
                        },
                        {
                          "columnMatch": "NumberOfVMs",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "13%"
                          }
                        },
                        {
                          "columnMatch": "patchName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "70%"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "PatchName",
                          "label": "Patch name"
                        },
                        {
                          "columnId": "MSRCSeverity",
                          "label": "MSRC severity"
                        },
                        {
                          "columnId": "NumberOfVMs",
                          "label": "Number of machines"
                        }
                      ]
                    }
                  },
                  "name": "Top 30 installed updates"
                }
              ]
            },
            "name": "Windows installation history",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Linux"
            },
            "name": "text - 14"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnotnull(properties.version)\r\n| summarize count() by classification",
                    "size": 0,
                    "title": "Total number of updates installed by classification",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "Other",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "Security-ESM",
                          "color": "red"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Total number of updates installed by classification",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse id with resourceId \"/patchInstallationResults\" *\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnotnull(properties.version)\r\n| extend classification = iff(classification =~ \"updaterollup\", \"UpdateRollup\", classification)\r\n| summarize dcount(vmId) by classification",
                    "size": 0,
                    "title": "Total number of machines where updates were installed",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Security",
                          "color": "red"
                        },
                        {
                          "seriesName": "Other",
                          "color": "grayBlue"
                        },
                        {
                          "seriesName": "Security-ESM",
                          "color": "red"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Total number of machines where updates were installed",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults/softwarePatches\", \"microsoft.hybridcompute/machines/patchinstallationresults/softwarePatches\")\r\n| parse type with typeID \"/patchinstallationresults/softwarepatches\"\r\n| where typeID in~ ({ResourceType})\r\n| where location in~ ({Location})\r\n| parse id with resourceId \"/patchInstallationResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| extend installationState = tostring(properties.installationState)\r\n| where installationState == \"Installed\"\r\n| where isnotnull(properties.version)\r\n| extend patchName = tostring(properties.patchName)\r\n| extend version = tostring(properties.version)\r\n| summarize countOfVMs = dcount(vmId) by patchName, version, classification\r\n| extend classificationPriority = iff(classification contains \"security\", 0, 1)\r\n| sort by classificationPriority asc, countOfVMs desc\r\n| project patchName, version, classification, countOfVMs\r\n| take 30",
                    "size": 0,
                    "title": "Top 30 installed updates",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "patchName",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "70%"
                          }
                        },
                        {
                          "columnMatch": "classification",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Security",
                                "representation": "3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "patchName",
                          "label": "Patch name"
                        },
                        {
                          "columnId": "version",
                          "label": "Version"
                        },
                        {
                          "columnId": "classification",
                          "label": "Classification"
                        },
                        {
                          "columnId": "countOfVMs",
                          "label": "Number of machines"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "Top 30 installed updates",
                  "styleSettings": {
                    "maxWidth": "50%"
                  }
                }
              ]
            },
            "name": "Linux installation history",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "CurrentTab",
        "comparison": "isEqualTo",
        "value": "UpdateInstallationHistory"
      },
      "name": "Installation History",
      "styleSettings": {
        "margin": "0 0 0 10px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "57df95b6-bf4e-43d7-bac0-22f2903ede45",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "05578175-fbe8-4dd2-9c6a-dec2f503d6cf",
                  "version": "KqlParameterItem/1.0",
                  "name": "Location",
                  "type": 8,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| where type == \"microsoft.maintenance/maintenanceconfigurations\"\r\n| distinct location",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where ['type'] =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n| where location in ({Location})\r\n| where properties.maintenanceScope == \"InGuestPatch\"\r\n| project id = tolower(id)\r\n| join kind=leftouter (\r\n    maintenanceresources\r\n    | where type =~ \"microsoft.maintenance/configurationassignments\"\r\n    | extend splitArr = split(id, \"/\")\r\n    | extend isDynamicScope = array_length(splitArr) == 7 or array_length(splitArr) == 9\r\n    | extend maintenanceConfigurationId = tolower(tostring(properties.maintenanceConfigurationId))\r\n) on $left.id == $right.maintenanceConfigurationId\r\n| summarize totalNumberOfSchedules = dcount(id), noOfStaticAssignments = dcountif(id, isDynamicScope == false), noOfDynamicScopes = dcountif(id, isDynamicScope == true)\r\n| project machinePack = pack(\"Total schedules\", totalNumberOfSchedules, \"Total number of machines attached\", noOfStaticAssignments, \"Total number of dynamic scopes\", noOfDynamicScopes)\r\n| mv-expand machinePack\r\n| extend machine = tostring(bag_keys(machinePack)[0])\r\n| extend tileRank = case(machine =~ \"Total schedules\", 0, machine =~ \"Total number of machines attached\", 1, 2)\r\n| extend count_ = tolong(machinePack[machine])\r\n| project tileRank, machine, count_",
              "size": 3,
              "exportFieldName": "id",
              "exportParameterName": "maintenanceConfigurationID",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "tiles",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "maintenanceConfigurationId",
                    "formatter": 5
                  }
                ],
                "rowLimit": 500,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Maintenance configuration"
                  },
                  {
                    "columnId": "name",
                    "label": "Name"
                  },
                  {
                    "columnId": "location",
                    "label": "Location"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_duration",
                    "label": "Duration"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_timeZone",
                    "label": "Timezone"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_startDateTime",
                    "label": "Start date time"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_endDateTime",
                    "label": "End date time"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_recurEvery",
                    "label": "Recurrence"
                  },
                  {
                    "columnId": "installPatchesProperties",
                    "label": "Install patches settings"
                  },
                  {
                    "columnId": "noOfStaticAssignments",
                    "label": "Number of attached VMs"
                  },
                  {
                    "columnId": "noOfDynamicScopes",
                    "label": "Number of attached dynamic scopes"
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "machine",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": false,
                "sortCriteriaField": "tileRank",
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "name": "Schedules cards",
            "styleSettings": {
              "margin": "10px 0 0 0",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Maintenance configurations\r\n\r\nPlease make sure to select all the subscriptions across which the machines are present for accurate count of attached VMs and dynamic scopes."
            },
            "name": "text - SchedulesNoteForSubscriptionSelection",
            "styleSettings": {
              "margin": "15px 0 0 0"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where ['type'] =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n| where location in ({Location})\r\n| where properties.maintenanceScope == \"InGuestPatch\"\r\n| project id = tolower(id), name, location, tostring(properties.maintenanceWindow.duration),  tostring(properties.maintenanceWindow.timeZone), tostring(properties.maintenanceWindow.startDateTime), tostring(properties.maintenanceWindow.endDateTime), tostring(properties.maintenanceWindow.recurEvery), installPatchesProperties = properties.installPatches\r\n| join kind=leftouter (\r\n    maintenanceresources\r\n    | where type =~ \"microsoft.maintenance/configurationassignments\"\r\n    | extend splitArr = split(id, \"/\")\r\n    | extend isDynamicScope = array_length(splitArr) == 7 or array_length(splitArr) == 9\r\n    | extend maintenanceConfigurationId = tolower(tostring(properties.maintenanceConfigurationId))\r\n    | summarize noOfStaticAssignments = dcountif(id, isDynamicScope == false), noOfDynamicScopes = dcountif(id, isDynamicScope) by maintenanceConfigurationId\r\n) on $left.id == $right.maintenanceConfigurationId\r\n| extend noOfStaticAssignments = iff(isnull(noOfStaticAssignments), 0, noOfStaticAssignments), noOfDynamicScopes = iff(isnull(noOfStaticAssignments), 0, noOfDynamicScopes)",
              "size": 0,
              "exportFieldName": "id",
              "exportParameterName": "maintenanceConfigurationID",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "maintenanceConfigurationId",
                    "formatter": 5
                  }
                ],
                "rowLimit": 500,
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Maintenance configuration"
                  },
                  {
                    "columnId": "name",
                    "label": "Name"
                  },
                  {
                    "columnId": "location",
                    "label": "Location"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_duration",
                    "label": "Duration"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_timeZone",
                    "label": "Timezone"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_startDateTime",
                    "label": "Start date time"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_endDateTime",
                    "label": "End date time"
                  },
                  {
                    "columnId": "properties_maintenanceWindow_recurEvery",
                    "label": "Recurrence"
                  },
                  {
                    "columnId": "installPatchesProperties",
                    "label": "Install patches settings"
                  },
                  {
                    "columnId": "noOfStaticAssignments",
                    "label": "Number of attached VMs"
                  },
                  {
                    "columnId": "noOfDynamicScopes",
                    "label": "Number of attached dynamic scopes"
                  }
                ]
              },
              "sortBy": []
            },
            "name": "query - 8",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<u>**Please select a maintenance configuration from the grid above to load data for the attached VMs and dynamic scopes.**</u>",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "maintenanceConfigurationID",
              "comparison": "isEqualTo"
            },
            "name": "text - 7"
          },
          {
            "type": 1,
            "content": {
              "json": "# Machines attached to the maintenance configuration"
            },
            "name": "text - SchedulesMachinesAttached"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "maintenanceresources\r\n| where ['type'] =~ \"microsoft.maintenance/configurationassignments\"\r\n| where properties.maintenanceConfigurationId =~ '{maintenanceConfigurationID}'\r\n| extend splitArr = split(id, \"/\")\r\n| where not(array_length(splitArr) == 7 or array_length(splitArr) == 9) // Condition to identify static assignments\r\n| extend vmId = tostring(properties.resourceId)\r\n| project vmId, subscriptionId, resourceGroup, location, tocName = iff(vmId contains \"hybridcompute\", \"updateManagement\", \"unifiedUpdateManagement\")",
              "size": 0,
              "noDataMessage": "No machines attached to this schedule.",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::selected"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "vmId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "showIcon": true,
                      "bladeOpenContext": {
                        "bladeName": "ResourceMenuBlade",
                        "extensionName": "HubsExtension",
                        "bladeParameters": [
                          {
                            "name": "id",
                            "source": "column",
                            "value": "vmId"
                          },
                          {
                            "name": "menuid",
                            "source": "column",
                            "value": "tocName"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "64ch"
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "location",
                    "formatter": 17,
                    "formatOptions": {
                      "customColumnWidthSetting": "243px"
                    }
                  },
                  {
                    "columnMatch": "tocName",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "vmId",
                    "label": "Virtual machine name"
                  },
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "location",
                    "label": "Location"
                  }
                ]
              }
            },
            "name": "query - 11",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Dynamic scopes attached to the maintenance configuration"
            },
            "name": "text - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "maintenanceresources\r\n| where ['type'] =~ \"microsoft.maintenance/configurationassignments\"\r\n| where properties.maintenanceConfigurationId =~ '{maintenanceConfigurationID}'\r\n| extend splitArr = split(id, \"/\")\r\n| where array_length(splitArr) == 7 or array_length(splitArr) == 9 // Condition to identify dynamic scopes\r\n| extend criteria = properties['filter']\r\n| project id, resourceGroups = criteria.resourceGroups, resourceTypes = criteria.resourceTypes, tagSettings = criteria.tagSettings, locations = criteria.locations, osTypes = criteria.osTypes, availabilityZones = criteria.availabilityZones, properties",
              "size": 0,
              "noDataMessage": "No dynamic scopes present in this schedule.",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::selected"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "location",
                    "formatter": 17,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "osTypes",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "13ch"
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "id",
                    "label": "Id"
                  },
                  {
                    "columnId": "resourceGroups",
                    "label": "Resource group(s)"
                  },
                  {
                    "columnId": "resourceTypes",
                    "label": "Resource type(s)"
                  },
                  {
                    "columnId": "tagSettings",
                    "label": "Tag settings"
                  },
                  {
                    "columnId": "locations",
                    "label": "Location(s)"
                  },
                  {
                    "columnId": "osTypes",
                    "label": "OS type(s)"
                  },
                  {
                    "columnId": "availabilityZones",
                    "label": "Availability zone(s)"
                  },
                  {
                    "columnId": "properties",
                    "label": "Properties"
                  }
                ]
              }
            },
            "name": "Dynamic scopes attached to the maintenance configuration",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "CurrentTab",
        "comparison": "isEqualTo",
        "value": "Schedule"
      },
      "name": "Schedules"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "7c3ebe26-8ab3-4b4e-8618-7545f5e29efb",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "43663c2d-1a18-4b18-9c76-6d11303e0353",
                  "version": "KqlParameterItem/1.0",
                  "name": "Location",
                  "label": "VM location",
                  "type": 8,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| where type in (\"microsoft.compute/virtualmachines\", \"microsoft.hybridcompute/machines\")\r\n| distinct location",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "43019d70-ae25-4c93-9129-1245c54fc7ac",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceType",
                  "type": 7,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": " [\r\n     { \"value\": \"microsoft.compute/virtualmachines\", \"label\": \"Azure Virtual Machine\", \"selected\":true}, \r\n     \r\n     { \"value\": \"microsoft.hybridcompute/machines\", \"label\": \"Arc enabled server\", \"selected\":true }]",
                  "defaultValue": "value::all",
                  "label": "Resource type"
                },
                {
                  "id": "1bc9b442-a6da-4d1c-92b7-57da7d9b7fdc",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "value": {
                    "durationMs": 604800000
                  },
                  "label": "Time range"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - OperationsHistory"
          },
          {
            "type": 1,
            "content": {
              "json": "# Patch installation history by maintenance run"
            },
            "name": "text - 3"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "maintenanceresources\r\n| where type =~ \"microsoft.maintenance/maintenanceconfigurations/applyupdates\"\r\n| where properties.maintenanceConfiguration.properties.maintenanceScope == \"InGuestPatch\"\r\n| where properties.startDateTime {TimeRange}\r\n| extend status = tostring(properties.status)\r\n| summarize dcount(id) by status",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Succeeded",
                          "color": "green"
                        },
                        {
                          "seriesName": "Timedout",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "Failed",
                          "color": "red"
                        },
                        {
                          "seriesName": "PartiallySucceeded",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "InProgress",
                          "color": "blue"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 1",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "maintenanceresources\r\n| where type =~ \"microsoft.maintenance/maintenanceconfigurations/applyupdates\"\r\n| where properties.startDateTime {TimeRange}\r\n| where properties.maintenanceConfiguration.properties.maintenanceScope == \"InGuestPatch\"\r\n| project name, properties, id\r\n| extend joinId = tolower(properties.maintenanceConfigurationId)\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ \"microsoft.maintenance/maintenanceconfigurations\"\r\n    | extend maintenanceConfigId = tolower(id)\r\n    | project maintenanceConfigId, tags\r\n) on $left.joinId == $right.maintenanceConfigId\r\n| extend status = tostring(properties.status)\r\n| extend maintenanceConfigurationName = tostring(properties.maintenanceConfiguration.name)\r\n| extend operationStartTime = todatetime(properties.startDateTime)\r\n| extend operationEndTime = iff(properties.status =~ \"InProgress\", datetime(null), todatetime(properties.endDateTime))\r\n| extend maintenanceConfigurationId = properties.maintenanceConfigurationId\r\n| extend scheduleRunId = properties.correlationId\r\n| extend succeededMachinesCount = iff(isempty(properties.resourceUpdateSummary.succeeded), 0, properties.resourceUpdateSummary.succeeded)\r\n| extend totalMachines = iff(isempty(properties.resourceUpdateSummary.total), 0, properties.resourceUpdateSummary.total)\r\n| project-rename maintenanceRunId = name\r\n| project maintenanceRunId, maintenanceConfigurationId, updatedMachines = strcat(succeededMachinesCount, \" out of \", totalMachines), operationStartTime, operationEndTime, status, tags, id\r\n| order by operationStartTime desc\r\n| take 1000",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "maintenanceRunId",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "UpdateCenterMaintenanceRunHistoryBlade",
                              "extensionName": "Microsoft_Azure_Automation",
                              "bladeParameters": [
                                {
                                  "name": "maintenanceRunId",
                                  "source": "column",
                                  "value": "id"
                                },
                                {
                                  "name": "maintenanceConfigurationId",
                                  "source": "column",
                                  "value": "maintenanceConfigurationId"
                                },
                                {
                                  "name": "maintenanceRunName",
                                  "source": "column",
                                  "value": "maintenanceRunId"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "maintenanceConfigurationId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true,
                            "customColumnWidthSetting": "64ch"
                          }
                        },
                        {
                          "columnMatch": "operationStartTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Succeeded",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Failed",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "InProgress",
                                "representation": "pending",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Timedout",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "NotStarted",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Partially succeeded",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Cancelled",
                                "representation": "cancelled",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "UpdateCenterMaintenanceRunHistoryBlade",
                              "extensionName": "Microsoft_Azure_Automation",
                              "bladeParameters": [
                                {
                                  "name": "maintenanceRunId",
                                  "source": "column",
                                  "value": "id"
                                },
                                {
                                  "name": "maintenanceConfigurationId",
                                  "source": "column",
                                  "value": "maintenanceConfigurationId"
                                },
                                {
                                  "name": "maintenanceRunName",
                                  "source": "column",
                                  "value": "maintenanceRunId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "59.1429ch"
                          }
                        },
                        {
                          "columnMatch": "deepLink",
                          "formatter": 1,
                          "formatOptions": {
                            "linkColumn": "deepLink",
                            "linkTarget": "Url"
                          }
                        }
                      ],
                      "rowLimit": 500,
                      "labelSettings": [
                        {
                          "columnId": "maintenanceRunId",
                          "label": "Maintenance run id"
                        },
                        {
                          "columnId": "maintenanceConfigurationId",
                          "label": "Maintenance configuration"
                        },
                        {
                          "columnId": "updatedMachines",
                          "label": "Updated machines"
                        },
                        {
                          "columnId": "operationStartTime",
                          "label": "Operation start time"
                        },
                        {
                          "columnId": "operationEndTime",
                          "label": "Operation end time"
                        },
                        {
                          "columnId": "status",
                          "label": "Status"
                        },
                        {
                          "columnId": "tags",
                          "label": "Tag"
                        },
                        {
                          "columnId": "id",
                          "label": "Maintenance run"
                        }
                      ]
                    }
                  },
                  "name": "historyByMaintenance",
                  "styleSettings": {
                    "maxWidth": "75%"
                  }
                }
              ]
            },
            "name": "History by maintenance run",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Patch installation history by machines"
            },
            "name": "text - 4"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "PatchInstallationResources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchinstallationresults\", \"microsoft.hybridcompute/machines/patchinstallationresults\")\r\n| parse type with typeID \"/patchinstallationresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.startDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| extend status = tostring(properties.status)\r\n| summarize dcount(id) by status",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Succeeded",
                          "color": "green"
                        },
                        {
                          "seriesName": "CompletedWithWarnings",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "Failed",
                          "color": "red"
                        },
                        {
                          "seriesName": "InProgress",
                          "color": "blue"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 1",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchinstallationresources\r\n| where type =~ \"microsoft.compute/virtualmachines/patchinstallationresults\" or type =~ \"microsoft.hybridcompute/machines/patchinstallationresults\"\r\n| parse type with typeID \"/patchinstallationresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.lastModifiedDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| parse id with resourceId '/patchInstallationResults/' *\r\n| parse id with * 'achines/' resourceName '/patchInstallationResults/' *\r\n| project resourceName, resourceId, properties.status, properties.startDateTime, properties.lastModifiedDateTime, properties.startedBy, properties, tocName = iff(resourceId contains \"hybridcompute\", \"updateManagement\", \"unifiedUpdateManagement\")\r\n| order by todatetime(properties.lastModifiedDateTime) desc\r\n| take 1000\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "resourceName",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "ResourceMenuBlade",
                              "extensionName": "HubsExtension",
                              "bladeParameters": [
                                {
                                  "name": "id",
                                  "source": "column",
                                  "value": "resourceId"
                                },
                                {
                                  "name": "menuid",
                                  "source": "column",
                                  "value": "tocName"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "resourceId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "showIcon": true,
                            "bladeOpenContext": {
                              "bladeName": "ResourceMenuBlade",
                              "extensionName": "HubsExtension",
                              "bladeParameters": [
                                {
                                  "name": "id",
                                  "source": "column",
                                  "value": "resourceId"
                                },
                                {
                                  "name": "menuid",
                                  "source": "column",
                                  "value": "tocName"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "properties_status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Failed",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Succeeded",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "CompletedWithWarnings",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "InProgress",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "properties_startDateTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "properties_lastModifiedDateTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "properties_startedBy",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "tocName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tags",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 500,
                      "labelSettings": [
                        {
                          "columnId": "resourceName",
                          "label": "Name"
                        },
                        {
                          "columnId": "resourceId",
                          "label": "Name"
                        },
                        {
                          "columnId": "properties_status",
                          "label": "Status"
                        },
                        {
                          "columnId": "properties_startDateTime",
                          "label": "Start time"
                        },
                        {
                          "columnId": "properties_lastModifiedDateTime",
                          "label": "End time"
                        },
                        {
                          "columnId": "properties_startedBy",
                          "label": "Started by"
                        },
                        {
                          "columnId": "properties",
                          "label": "View run details"
                        }
                      ]
                    }
                  },
                  "name": "HistoryByRuns",
                  "styleSettings": {
                    "maxWidth": "75%"
                  }
                }
              ]
            },
            "name": "History by machines",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Patch assessment history by machines"
            },
            "name": "text - PatchAssessmentHistory"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "PatchAssessmentResources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| parse type with typeID \"/patchassessmentresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.startDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| extend status = tostring(properties.status)\r\n| summarize dcount(id) by status",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Succeeded",
                          "color": "green"
                        },
                        {
                          "seriesName": "CompletedWithWarnings",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "Failed",
                          "color": "red"
                        },
                        {
                          "seriesName": "InProgress",
                          "color": "blue"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 1",
                  "styleSettings": {
                    "maxWidth": "25%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type =~ \"microsoft.compute/virtualmachines/patchassessmentresults\" or type =~  \"microsoft.hybridcompute/machines/patchassessmentresults\"\r\n| parse type with typeID \"/patchassessmentresults\"\r\n| where typeID in~ ({ResourceType})\r\n| where properties.lastModifiedDateTime {TimeRange}\r\n| where location in~ ({Location})\r\n| parse id with resourceId '/patchAssessmentResults/' *\r\n| parse id with * 'achines/' resourceName '/patchAssessmentResults/' *\r\n| project resourceName, resourceId, properties.status, properties.startDateTime, properties.lastModifiedDateTime, properties.startedBy, properties, tocName = iff(resourceId contains \"hybridcompute\", \"updateManagement\", \"unifiedUpdateManagement\")\r\n| order by todatetime(properties.lastModifiedDateTime) desc\r\n| take 1000\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "resourceName",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "bladeOpenContext": {
                              "bladeName": "ResourceMenuBlade",
                              "extensionName": "HubsExtension",
                              "bladeParameters": [
                                {
                                  "name": "id",
                                  "source": "column",
                                  "value": "resourceId"
                                },
                                {
                                  "name": "menuid",
                                  "source": "column",
                                  "value": "tocName"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "resourceId",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "showIcon": true,
                            "bladeOpenContext": {
                              "bladeName": "ResourceMenuBlade",
                              "extensionName": "HubsExtension",
                              "bladeParameters": [
                                {
                                  "name": "id",
                                  "source": "column",
                                  "value": "resourceId"
                                },
                                {
                                  "name": "menuid",
                                  "source": "column",
                                  "value": "tocName"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "properties_status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Failed",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Succeeded",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "CompletedWithWarnings",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "InProgress",
                                "representation": "1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "properties_startDateTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "properties_lastModifiedDateTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "properties_startedBy",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "tocName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "tags",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 500,
                      "labelSettings": [
                        {
                          "columnId": "resourceName",
                          "label": "Name"
                        },
                        {
                          "columnId": "resourceId",
                          "label": "Name"
                        },
                        {
                          "columnId": "properties_status",
                          "label": "Status"
                        },
                        {
                          "columnId": "properties_startDateTime",
                          "label": "Start time"
                        },
                        {
                          "columnId": "properties_lastModifiedDateTime",
                          "label": "End time"
                        },
                        {
                          "columnId": "properties_startedBy",
                          "label": "Started by"
                        },
                        {
                          "columnId": "properties",
                          "label": "View run details"
                        }
                      ]
                    }
                  },
                  "name": "HistoryByRuns",
                  "styleSettings": {
                    "maxWidth": "75%"
                  }
                }
              ]
            },
            "name": "Patch Assessment history by machines",
            "styleSettings": {
              "margin": "0 0 0 10px",
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "CurrentTab",
        "comparison": "isEqualTo",
        "value": "OperationsHistory"
      },
      "name": "History"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "095e1fe3-574e-43e3-a993-d3df4d956294",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscription",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": true,
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 0"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibility": {
              "parameterName": "CurrentTab",
              "comparison": "isEqualTo",
              "value": "Recommendations"
            },
            "name": "Recommendations filters"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Periodic assessment",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| extend os = tolower(coalesce(properties.osName, properties.osType, properties.storageProfile.osDisk.osType))\r\n| extend patchSettingsObject = iff(os == \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend assessmentMode = tostring(patchSettingsObject.assessmentMode)\r\n| extend PeriodicAssessment = iff(assessmentMode =~ \"AutomaticByPlatform\", \"Enabled\", \"Disabled\")\r\n| summarize count() by PeriodicAssessment",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Disabled",
                          "color": "red"
                        },
                        {
                          "seriesName": "Enabled",
                          "color": "green"
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ \"microsoft.compute/virtualmachines\" or type =~ \"microsoft.hybridcompute/machines\"\r\n| extend os = tolower(coalesce(properties.osName, properties.osType, properties.storageProfile.osDisk.osType))\r\n| extend patchSettingsObject = iff(os == \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend assessmentMode = tostring(patchSettingsObject.assessmentMode)\r\n| extend periodicAssessment = iff(assessmentMode =~ \"AutomaticByPlatform\", \"Enabled\", \"Disabled\")\r\n| summarize periodicAssessmentEnablementPercentage = round(todouble(countif(periodicAssessment == \"Disabled\")) / count() * 100, 2)\r\n| project paRecommendation = strcat(\"**\", periodicAssessmentEnablementPercentage, \"% of machines do not have periodic assessment enabled.**\", \" Enable periodic assessment to stay up to date with the patch compliance of your VMs. [Learn more](https://learn.microsoft.com/azure/update-manager/assessment-options#periodic-assessment)\")",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "card",
                    "textSettings": {
                      "style": "markdown"
                    }
                  },
                  "name": "query - 1",
                  "styleSettings": {
                    "margin": "0 0 0 20px"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "99286f6a-4fa1-4cf2-8286-7bf234f0087e",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Enable Periodic assessment now",
                        "preText": "",
                        "style": "primary",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterUpdateSettingsBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "margin": "0 0 0 20px"
                  }
                }
              ]
            },
            "customWidth": "50",
            "name": "Periodic assessment recommendation group",
            "styleSettings": {
              "maxWidth": "33.33%"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Azure virtual machines - Patch orchestration",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend patchSettings = iff(properties.storageProfile.osDisk.osType =~ \"windows\", properties.osProfile.windowsConfiguration.patchSettings, properties.osProfile.linuxConfiguration.patchSettings)\r\n| extend patchMode = patchSettings.patchMode\r\n| extend patchMode = case(patchMode =~ 'AutomaticByOS', 'Windows Automatic Updates', patchMode =~ 'ImageDefault', 'Image default', (patchMode =~ 'AutomaticByPlatform' and patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule == true), 'Customer Managed Schedules', patchMode =~ 'AutomaticByPlatform', 'Azure Managed - Safe Deployment', isempty(patchMode), \"N/A\", patchMode)\r\n| summarize count() by tostring(patchMode)",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "patchMode",
                        "formatter": 0
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "nodeIdField": "patchMode",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 200,
                      "colorSettings": {
                        "nodeColorField": "patchMode",
                        "type": 1,
                        "colorPalette": "default"
                      },
                      "hivesMargin": 5,
                      "edgeColorSettings": null
                    },
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Customer Managed Schedules",
                          "color": "green"
                        },
                        {
                          "seriesName": "Windows Automatic Updates",
                          "color": "red"
                        },
                        {
                          "seriesName": "Image default",
                          "color": "orangeDark"
                        },
                        {
                          "seriesName": "Azure Managed - Safe Deployment",
                          "color": "green"
                        },
                        {
                          "seriesName": "Manual",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "\r\n\r\nPlease use **'Customer Managed Schedules'** mode and set up [Scheduled updates](https://learn.microsoft.com/azure/update-manager/scheduled-patching?tabs=schedule-updates-single-machine%2Cschedule-updates-scale-overview%2Cwindows-maintenance), or use **'Azure Managed - Safe Deployment'** mode to allow Azure platform to manage the patching. [Learn more](https://learn.microsoft.com/azure/update-manager/manage-multiple-machines#summary-of-machine-status) "
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "margin": "0 0 0 20px"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "802dc5c2-a293-4ce3-a063-404f652a900f",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Update patch mode now",
                        "style": "primary",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterUpdateSettingsBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "margin": "0 0 0 20px"
                  }
                }
              ]
            },
            "customWidth": "50",
            "name": "Patch orchestration recommendation",
            "styleSettings": {
              "maxWidth": "33.33%"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Reboot pending",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id), type\r\n| join kind=leftouter(\r\n    patchassessmentresources\r\n    | where type in (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n    | parse id with resourceId \"/patchAssessmentResults\" *\r\n    | where properties.status =~ \"Succeeded\"\r\n    | extend rebootStatus = properties.rebootPending\r\n    | project vmId = tolower(resourceId), rebootStatus\r\n) on vmId\r\n| where rebootStatus == true\r\n| extend resourceType = iff (type =~ \"microsoft.compute/virtualmachines\", \"Azure virtual machines\", \"Arc-enabled servers\")\r\n| summarize VMCount = count() by resourceType",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "resourceType",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "VMCount",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 2,
                      "topContent": {},
                      "centerContent": {
                        "columnMatch": "VMCount"
                      },
                      "bottomContent": {
                        "columnMatch": "content"
                      },
                      "nodeIdField": "VMCount",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": null,
                      "hivesMargin": 5,
                      "edgeColorSettings": null
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Disabled",
                          "color": "red"
                        },
                        {
                          "seriesName": "Enabled",
                          "color": "green"
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n| project vmId = tolower(id), type\r\n| join kind=leftouter(\r\n    patchassessmentresources\r\n    | where type in (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n    | parse id with resourceId \"/patchAssessmentResults\" *\r\n    | where properties.status =~ \"Succeeded\"\r\n    | extend rebootStatus = properties.rebootPending\r\n    | project vmId = tolower(resourceId), rebootStatus\r\n) on vmId\r\n| where rebootStatus == true\r\n| summarize totalRebootPendingVMs = count()\r\n| project text = strcat(\"Total \", totalRebootPendingVMs, \" VMs have pending reboot.\")",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "card",
                    "textSettings": {
                      "style": "header"
                    }
                  },
                  "name": "query - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "Rebooting after patch installation is crucial to ensure that all updates are properly applied, system files are refreshed, and any pending changes take effect to maintain system stability and security."
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "maxWidth": "80%"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "8440ceb1-c38d-43bf-9085-b3ef53ce7599",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Machines",
                        "preText": "Visit",
                        "postText": "view and reboot VMs with pending reboot.",
                        "style": "link",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterMachinesBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeParameters": []
                        }
                      }
                    ]
                  },
                  "name": "links - 3"
                }
              ]
            },
            "customWidth": "50",
            "name": "Reboot pending recommendations",
            "styleSettings": {
              "maxWidth": "33.33%"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Security and Critical updates",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches\")\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| where classification contains \"security\" or classification =~ \"critical\"\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind=leftouter(\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | project vmId, osType = case(os =~ \"windows\", \"Windows\", os =~ \"Linux\", \"Linux\", os)\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(osType)\r\n| summarize updateCount = dcount(uniquePatchNameWithVersion), machineCountString = strcat(\"across \", dcount(vmId), \" machine(s)\") by osType",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "osType",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "updateCount",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "machineCountString"
                      },
                      "showBorder": false
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Disabled",
                          "color": "red"
                        },
                        {
                          "seriesName": "Enabled",
                          "color": "green"
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches\", \"microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches\")\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend vmId = tolower(resourceId)\r\n| extend classification = tostring(properties.classifications[0])\r\n| where classification contains \"security\" or classification =~ \"critical\"\r\n| extend uniquePatchNameWithVersion = iff(isnull(properties.kbId), strcat(tostring(properties.patchName), '_', tostring(properties.version)), properties.patchName)\r\n| join kind=leftouter(\r\n    resources\r\n    | where type == \"microsoft.compute/virtualmachines\" or type == \"microsoft.hybridcompute/machines\"\r\n    | extend vmId = tolower(id)\r\n    | extend os = coalesce(tostring(properties.osName), tostring(properties.osType), tostring(properties.storageProfile.osDisk.osType))\r\n    | project vmId, osType = case(os =~ \"windows\", \"Windows\", os =~ \"Linux\", \"Linux\", os)\r\n) on vmId // To check for existing VMs only\r\n| where isnotempty(osType)\r\n| summarize updateCount = dcount(uniquePatchNameWithVersion), machineCount = dcount(vmId)\r\n| project securityAndCriticalUpdateRecommendation = strcat(\"There are **\", updateCount, \" pending security and critical updates across \", machineCount, \" machines.**\")",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "card",
                    "textSettings": {
                      "style": "markdown"
                    }
                  },
                  "name": "query - 1",
                  "styleSettings": {
                    "margin": "10px 0 0 0"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "99286f6a-4fa1-4cf2-8286-7bf234f0087e",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Schedule update",
                        "preText": "",
                        "postText": "or",
                        "style": "link",
                        "bladeOpenContext": {
                          "bladeName": "CreateMaintenanceConfiguration.ReactView",
                          "extensionName": "Microsoft_Azure_Maintenance",
                          "bladeParameters": [
                            {
                              "name": "scope",
                              "source": "static",
                              "value": "InGuestPatch"
                            }
                          ]
                        }
                      },
                      {
                        "id": "f9b0f302-bc89-4451-8a93-5287927b60cc",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "One-time update",
                        "preText": "trigger",
                        "postText": "to stay compliant.",
                        "style": "link",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterInstallUpdatesBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeJsonParameters": "{\r\n\t\"ids\": [],\r\n\t\"subs\": [],\r\n\t\"source\": \"AUMReportsRecommendationsTab\"\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "links - 2"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "cf459ba7-6b3a-48e0-83c2-c49a2d34ddd1",
                        "linkTarget": "OpenBlade",
                        "linkLabel": "Create alerts",
                        "preText": "",
                        "postText": "to get notified when security or critical updates are available.",
                        "style": "link",
                        "bladeOpenContext": {
                          "bladeName": "UpdateCenterMenuBlade",
                          "extensionName": "Microsoft_Azure_Automation",
                          "bladeJsonParameters": "{\r\n\t\"defaultMenuId\": \"alerts\"\r\n}"
                        }
                      }
                    ]
                  },
                  "name": "links - Alerting"
                }
              ]
            },
            "customWidth": "50",
            "name": "Security and Critical updates",
            "styleSettings": {
              "maxWidth": "33.33%"
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "CurrentTab",
        "comparison": "isEqualTo",
        "value": "Recommendations"
      },
      "name": "Recommendation"
    }
  ],
  "fallbackResourceIds": [
    "Azure Update Management Center"
  ],
  "fromTemplateId": "Community-Workbooks/Azure Update Management Center/Azure Update Manager",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}